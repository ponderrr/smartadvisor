"""Initial database schema

Revision ID: 42e52d1a32a6
Revises: 
Create Date: 2025-05-23 15:09:25.216413

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '42e52d1a32a6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('genres',
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('profile_picture_url', sa.String(), nullable=True),
    sa.Column('profile_picture_updated', sa.DateTime(), nullable=True),
    sa.Column('stripe_customer_id', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=False)
    op.create_table('recommendation_history',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_recommendation_history_id'), 'recommendation_history', ['id'], unique=False)
    op.create_table('recommendations',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_recommendations_id'), 'recommendations', ['id'], unique=False)
    op.create_table('subscriptions',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('tier', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('current_period_start', sa.DateTime(timezone=True), nullable=True),
    sa.Column('current_period_end', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancel_at_period_end', sa.Boolean(), nullable=True),
    sa.Column('price_id', sa.String(), nullable=True),
    sa.Column('customer_id', sa.String(), nullable=True),
    sa.Column('stripe_subscription_id', sa.String(), nullable=True),
    sa.Column('stripe_subscription_item_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subscriptions_id'), 'subscriptions', ['id'], unique=False)
    op.create_table('user_preferences',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('accessibility_require_subtitles', sa.Boolean(), nullable=True),
    sa.Column('accessibility_require_audio_description', sa.Boolean(), nullable=True),
    sa.Column('accessibility_require_closed_captions', sa.Boolean(), nullable=True),
    sa.Column('content_filters_exclude_violent_content', sa.Boolean(), nullable=True),
    sa.Column('content_filters_exclude_sexual_content', sa.Boolean(), nullable=True),
    sa.Column('language', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_preferences_id'), 'user_preferences', ['id'], unique=False)
    op.create_table('book_recommendations',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('recommendation_id', sa.String(length=36), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('author', sa.String(), nullable=False),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('age_rating', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('poster_path', sa.String(), nullable=True),
    sa.Column('isbn', sa.String(), nullable=True),
    sa.Column('published_date', sa.String(), nullable=True),
    sa.Column('page_count', sa.Integer(), nullable=True),
    sa.Column('publisher', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['recommendation_id'], ['recommendations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_book_recommendations_id'), 'book_recommendations', ['id'], unique=False)
    op.create_table('movie_recommendations',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('recommendation_id', sa.String(length=36), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('age_rating', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('poster_path', sa.String(), nullable=True),
    sa.Column('tmdb_id', sa.String(), nullable=True),
    sa.Column('release_date', sa.String(), nullable=True),
    sa.Column('runtime', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['recommendation_id'], ['recommendations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_movie_recommendations_id'), 'movie_recommendations', ['id'], unique=False)
    op.create_table('recommendation_questions',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('recommendation_id', sa.String(length=36), nullable=False),
    sa.Column('question_text', sa.String(), nullable=False),
    sa.Column('question_order', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['recommendation_id'], ['recommendations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_recommendation_questions_id'), 'recommendation_questions', ['id'], unique=False)
    op.create_table('book_genres',
    sa.Column('book_recommendation_id', sa.String(length=36), nullable=False),
    sa.Column('genre', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['book_recommendation_id'], ['book_recommendations.id'], ),
    sa.ForeignKeyConstraint(['genre'], ['genres.name'], ),
    sa.PrimaryKeyConstraint('book_recommendation_id', 'genre')
    )
    op.create_table('movie_genres',
    sa.Column('movie_recommendation_id', sa.String(length=36), nullable=False),
    sa.Column('genre', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['genre'], ['genres.name'], ),
    sa.ForeignKeyConstraint(['movie_recommendation_id'], ['movie_recommendations.id'], ),
    sa.PrimaryKeyConstraint('movie_recommendation_id', 'genre')
    )
    op.create_table('recommendation_answers',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('question_id', sa.String(length=36), nullable=False),
    sa.Column('answer_text', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['recommendation_questions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_recommendation_answers_id'), 'recommendation_answers', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_recommendation_answers_id'), table_name='recommendation_answers')
    op.drop_table('recommendation_answers')
    op.drop_table('movie_genres')
    op.drop_table('book_genres')
    op.drop_index(op.f('ix_recommendation_questions_id'), table_name='recommendation_questions')
    op.drop_table('recommendation_questions')
    op.drop_index(op.f('ix_movie_recommendations_id'), table_name='movie_recommendations')
    op.drop_table('movie_recommendations')
    op.drop_index(op.f('ix_book_recommendations_id'), table_name='book_recommendations')
    op.drop_table('book_recommendations')
    op.drop_index(op.f('ix_user_preferences_id'), table_name='user_preferences')
    op.drop_table('user_preferences')
    op.drop_index(op.f('ix_subscriptions_id'), table_name='subscriptions')
    op.drop_table('subscriptions')
    op.drop_index(op.f('ix_recommendations_id'), table_name='recommendations')
    op.drop_table('recommendations')
    op.drop_index(op.f('ix_recommendation_history_id'), table_name='recommendation_history')
    op.drop_table('recommendation_history')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('genres')
    # ### end Alembic commands ###
